// Mocks generated by Mockito 5.4.6 from annotations
// in studia/test/auth/login_remote_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:studia/core/constants/language_constants.dart' as _i6;
import 'package:studia/core/domain/entities/user.dart' as _i4;
import 'package:studia/features/auth/domain/repositories/login_repository_local.dart'
    as _i5;
import 'package:studia/features/auth/domain/repositories/login_repository_remote.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginRepositoryRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepositoryRemote extends _i1.Mock
    implements _i2.LoginRepositoryRemote {
  @override
  _i3.Future<_i4.User?> getUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [userId]),
            returnValue: _i3.Future<_i4.User?>.value(),
            returnValueForMissingStub: _i3.Future<_i4.User?>.value(),
          )
          as _i3.Future<_i4.User?>);

  @override
  _i3.Future<bool> register(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#register, [data]),
            returnValue: _i3.Future<bool>.value(false),
            returnValueForMissingStub: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}

/// A class which mocks [LoginRepositoryLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepositoryLocal extends _i1.Mock
    implements _i5.LoginRepositoryLocal {
  @override
  _i3.Future<Map<String, dynamic>> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> saveUser(String? id, String? email) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [id, email]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeUser() =>
      (super.noSuchMethod(
            Invocation.method(#removeUser, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.Language> getLanguage() =>
      (super.noSuchMethod(
            Invocation.method(#getLanguage, []),
            returnValue: _i3.Future<_i6.Language>.value(_i6.Language.en),
            returnValueForMissingStub: _i3.Future<_i6.Language>.value(
              _i6.Language.en,
            ),
          )
          as _i3.Future<_i6.Language>);
}
