// Mocks generated by Mockito 5.4.6 from annotations
// in studia/test/settings/domain/update_language_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:studia/core/constants/language_constants.dart' as _i3;
import 'package:studia/core/di/provider.dart' as _i2;
import 'package:studia/features/settings/domain/repositories/settings_repository_local.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LanguageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageProvider extends _i1.Mock implements _i2.LanguageProvider {
  @override
  _i3.Language get language =>
      (super.noSuchMethod(
            Invocation.getter(#language),
            returnValue: _i3.Language.en,
            returnValueForMissingStub: _i3.Language.en,
          )
          as _i3.Language);

  @override
  void setLanguage(_i3.Language? language) => super.noSuchMethod(
    Invocation.method(#setLanguage, [language]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SettingsRepositoryLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepositoryLocal extends _i1.Mock
    implements _i4.SettingsRepositoryLocal {
  @override
  _i5.Future<void> saveLanguage(_i3.Language? language) =>
      (super.noSuchMethod(
            Invocation.method(#saveLanguage, [language]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
