// Mocks generated by Mockito 5.4.6 from annotations
// in studia/test/playground/domain/update_user_performance_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:studia/core/data/datasources/local/drift/database.dart' as _i5;
import 'package:studia/core/di/provider.dart' as _i3;
import 'package:studia/core/domain/entities/user.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i3.UserProvider {
  @override
  void setUser(_i2.User? user) => super.noSuchMethod(
    Invocation.method(#setUser, [user]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#id)),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#id),
            ),
          )
          as String);

  @override
  String get firstName =>
      (super.noSuchMethod(
            Invocation.getter(#firstName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#firstName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#firstName),
            ),
          )
          as String);

  @override
  String get lastName =>
      (super.noSuchMethod(
            Invocation.getter(#lastName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#lastName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#lastName),
            ),
          )
          as String);

  @override
  String get gender =>
      (super.noSuchMethod(
            Invocation.getter(#gender),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#gender),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#gender),
            ),
          )
          as String);

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  int get birthYear =>
      (super.noSuchMethod(
            Invocation.getter(#birthYear),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  List<double> get performance =>
      (super.noSuchMethod(
            Invocation.getter(#performance),
            returnValue: <double>[],
            returnValueForMissingStub: <double>[],
          )
          as List<double>);

  @override
  _i2.User copyWith({
    String? id,
    String? firstName,
    String? lastName,
    String? gender,
    String? email,
    String? avatar,
    _i5.Levels? level,
    int? birthYear,
    List<double>? performance,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #id: id,
              #firstName: firstName,
              #lastName: lastName,
              #gender: gender,
              #email: email,
              #avatar: avatar,
              #level: level,
              #birthYear: birthYear,
              #performance: performance,
            }),
            returnValue: _FakeUser_0(
              this,
              Invocation.method(#copyWith, [], {
                #id: id,
                #firstName: firstName,
                #lastName: lastName,
                #gender: gender,
                #email: email,
                #avatar: avatar,
                #level: level,
                #birthYear: birthYear,
                #performance: performance,
              }),
            ),
            returnValueForMissingStub: _FakeUser_0(
              this,
              Invocation.method(#copyWith, [], {
                #id: id,
                #firstName: firstName,
                #lastName: lastName,
                #gender: gender,
                #email: email,
                #avatar: avatar,
                #level: level,
                #birthYear: birthYear,
                #performance: performance,
              }),
            ),
          )
          as _i2.User);
}
